{"ast":null,"code":"var _jsxFileName = \"/Users/tamzin/Bootcamp/assignments/react-portfolio/src/pages/Project.js\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Project(props) {\n  const styles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginLeft: \"40px\",\n    marginBottom: \"50px\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), props.challenges.map((challenge, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: challenge.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: challenge.image\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: challenge.description\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: challenge.deployedURL,\n        children: \"Visit App\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: challenge.repo,\n        children: \"View GitHub Repo\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c = Project;\nexport default Project;\n\n// {props.challenges.map((challenge, index) => (\n//   <Card style={{ width: \"18rem\" }}>\n//     <Card.Img variant=\"top\" src={challenge.image} />\n//     <Card.Body>\n//       <Card.Title key={index}>{challenge.title}</Card.Title>\n//       <Card.Text key={index}>\n//         {challenge.description}\n//       </Card.Text>\n//       <Button variant=\"primary\" key={index} href={challenge.deployedURL}>\n//         Visit App\n//       </Button>\n//       <Button variant=\"primary\" key={index} href={challenge.repo}>\n//         View GitHub Repo\n//       </Button>\n//     </Card.Body>\n//   </Card>\n// ))}\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["Button","Card","Project","props","styles","display","flexDirection","marginLeft","marginBottom","challenges","map","challenge","index","title","image","description","deployedURL","repo"],"sources":["/Users/tamzin/Bootcamp/assignments/react-portfolio/src/pages/Project.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction Project(props) {\n  const styles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginLeft: \"40px\",\n    marginBottom: \"50px\",\n  };\n\n  return (\n    <>\n      <h1>Projects</h1>\n      {props.challenges.map((challenge, index) => (\n        <div style={styles}>\n          <h3 key={index}>{challenge.title}</h3>\n          <img key={index} src={challenge.image}></img>\n          <p key={index}>{challenge.description}</p>\n          <a key={index} href={challenge.deployedURL}>\n            Visit App\n          </a>\n          <a key={index} href={challenge.repo}>\n            View GitHub Repo\n          </a>\n        </div>\n      ))}\n\n      \n    </>\n  );\n}\n\nexport default Project;\n\n\n// {props.challenges.map((challenge, index) => (\n//   <Card style={{ width: \"18rem\" }}>\n//     <Card.Img variant=\"top\" src={challenge.image} />\n//     <Card.Body>\n//       <Card.Title key={index}>{challenge.title}</Card.Title>\n//       <Card.Text key={index}>\n//         {challenge.description}\n//       </Card.Text>\n//       <Button variant=\"primary\" key={index} href={challenge.deployedURL}>\n//         Visit App\n//       </Button>\n//       <Button variant=\"primary\" key={index} href={challenge.repo}>\n//         View GitHub Repo\n//       </Button>\n//     </Card.Body>\n//   </Card>\n// ))}"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAAA;AAExC,SAASC,OAAO,CAACC,KAAK,EAAE;EACtB,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,EAChBL,KAAK,CAACM,UAAU,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACrC;MAAK,KAAK,EAAER,MAAO;MAAA,wBACjB;QAAA,UAAiBO,SAAS,CAACE;MAAK,GAAvBD,KAAK;QAAA;QAAA;QAAA;MAAA,QAAwB,eACtC;QAAiB,GAAG,EAAED,SAAS,CAACG;MAAM,GAA5BF,KAAK;QAAA;QAAA;QAAA;MAAA,QAA8B,eAC7C;QAAA,UAAgBD,SAAS,CAACI;MAAW,GAA7BH,KAAK;QAAA;QAAA;QAAA;MAAA,QAA6B,eAC1C;QAAe,IAAI,EAAED,SAAS,CAACK,WAAY;QAAA,UAAC;MAE5C,GAFQJ,KAAK;QAAA;QAAA;QAAA;MAAA,QAET,eACJ;QAAe,IAAI,EAAED,SAAS,CAACM,IAAK;QAAA,UAAC;MAErC,GAFQL,KAAK;QAAA;QAAA;QAAA;MAAA,QAET;IAAA;MAAA;MAAA;MAAA;IAAA,QAEP,CAAC;EAAA,gBAGD;AAEP;AAAC,KA5BQV,OAAO;AA8BhB,eAAeA,OAAO;;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}